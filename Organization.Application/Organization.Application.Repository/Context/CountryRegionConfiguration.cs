// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.61
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using Organization.Application.DTO.Entities;

namespace Organization.Application.Repository.Context
{

    // CountryRegion
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public partial class CountryRegionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CountryRegion>
    {
        public CountryRegionConfiguration()
            : this("dbo")
        {
        }

        public CountryRegionConfiguration(string schema)
        {
            ToTable("CountryRegion", schema);
            HasKey(x => x.ID);

            Property(x => x.ID).HasColumnName(@"ID").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Name).HasColumnName(@"Name").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.Abbreviation).HasColumnName(@"abbreviation").IsOptional().IsFixedLength().IsUnicode(false).HasColumnType("char").HasMaxLength(2);
            Property(x => x.DistanceUnitId).HasColumnName(@"DistanceUnitID").IsOptional().HasColumnType("int");
            Property(x => x.MoneyUnitId).HasColumnName(@"MoneyUnitID").IsOptional().HasColumnType("int");

            // Foreign keys
            HasOptional(a => a.DistanceUnit).WithMany(b => b.CountryRegions).HasForeignKey(c => c.DistanceUnitId).WillCascadeOnDelete(false); // FK_CountryRegion_DistanceUnit
            HasOptional(a => a.MoneyUnit).WithMany(b => b.CountryRegions).HasForeignKey(c => c.MoneyUnitId).WillCascadeOnDelete(false); // FK_CountryRegion_MoneyUnit
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
